name: Build & deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_USER: homestead
          MYSQL_PASSWORD: secret
          MYSQL_DATABASE: homestead
          MYSQL_ROOT_PASSWORD: secret
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      
      - name: Configure PHP 8.0
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extensions: mbstring, ctype, fileinfo, openssl, PDO, pdo_mysql, bcmath, json, tokenizer, xml 
      
      - name: Composer install
        run: |
          composer install --no-interaction --prefer-dist  
          chmod -R 777 storage bootstrap/cache      

      - name: Compile CSS and Javascript
        run: |
          npm install
          npm run build
          
      - name: Run migrations & Unit test
        run: |
          php -r "file_exists('.env') || copy('.env.workflow', '.env');"
          php artisan migrate --no-interaction
          php artisan key:generate
          ./vendor/bin/phpunit tests/      
      
      - name: Deploy to aws
        run: |
          HASH=$(git rev-parse --short "$GITHUB_SHA")
          BUNDLE="bundle-$HASH.tar.gz"
          S3_ENDPOINT="s3://${{ secrets.S3_BUCKET }}/bundles/"

          tar --exclude="*.git" --exclude="storage/logs/*" --exclude="vendor/*" --exclude="bootstrap/cache/*" --exclude=".env" -zcf $BUNDLE -T bundle.conf > /dev/null 2>&1

          aws s3 cp $BUNDLE $S3_ENDPOINT

          echo "[-] Your CodeDeploy S3 endpoint will be: $S3_ENDPOINT"
          aws deploy create-deployment --application-name ${{ secrets.APPLICATION_NAME }} --deployment-config-name ${{ secrets.DEPLOYMENT_CONFIG_NAME }} --deployment-group-name ${{ secrets.DEPLOYMENT_GROUP_NAME }} --file-exists-behavior OVERWRITE --s3-location $bucket=${{ secrets.S3_BUCKET }},bundleType=tgz,key=bundles/$BUNDLE
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}